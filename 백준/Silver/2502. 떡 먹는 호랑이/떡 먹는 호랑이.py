# 입력을 받습니다. d는 날짜, k는 떡의 개수입니다.
d, k = map(int, input().split())

# 배열을 초기화합니다. dy[i]는 i번째 날에 필요한 떡의 개수를 의미합니다.
dy = [0 for i in range(d)]
dy[0], dy[1] = 1, 1

# 무한 루프를 돌며 조건을 만족하는 값을 찾습니다.
while True:
    # 배열을 채웁니다. 각 날의 떡의 개수는 이전 두 날의 떡의 개수의 합입니다.
    for i in range(2, d):
        dy[i] = dy[i - 1] + dy[i - 2]
    
    # 조건을 만족하는 경우, 첫 번째와 두 번째 날의 떡의 개수를 출력하고 루프를 종료합니다.
    if dy[d - 1] == k:
        print(dy[0], dy[1], sep="\n")
        break
    # 현재 배열의 마지막 값이 k보다 큰 경우, 첫 번째 날의 떡의 개수를 증가시킵니다.
    elif dy[-1] > k:
        dy[0] += 1
        dy[1] = dy[0]
    # 그렇지 않은 경우, 두 번째 날의 떡의 개수를 증가시킵니다.
    else:
        dy[1] += 1